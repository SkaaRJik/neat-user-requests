server:
  port: 9000
spring:
  datasource:
    platform: postgres
    url: ${POSTGRES_JDBC_URL:jdbc:postgresql://localhost:5432/neat}
    username: ${POSTGRES_USERNAME:postgres}
    password: ${POSTGRES_PASSWORD:root}
    driverClassName: org.postgresql.Driver
  resources:
    static-locations: ${STATIC_FILES_LOCATION:/home/victor/IdeaProjects/neatvue/public}
  jpa:
    generate-ddl: false
    open-in-view: true
    properties:
      hibernate:
        ddl-auto: validate
        jdbc:
          lob:
            non_contextual_creation: true
      database-platform: org.hibernate.dialect.PostgreSQL11Dialect
    show-sql: false
  jackson:
    serialization:
      FAIL_ON_EMPTY_BEANS: false
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:user}
    password: ${RABBITMQ_PASSWORD:1512}
# App Properties
app:
  project:
    restrictions:
      max_allowed_experiments: ${NEAT_MAX_ALLOWED_CONFIGS:5}
  jwt:
    secret: ${JWT_SECRET:SECRET}
    access:
      expiration: ${JWT_ACCESS_EXPIRATION:864000}
      header: ${JWT_HEADER:Authorization}
      prefix: ${JWT_PREFIX:Bearer_}
    refresh:
      expiration: ${JWT_REFRESH_EXPIRATION:2592000000}

loger:
  level:
    root: DEBUG


path:
  avatars: /home/victor/IdeaProjects/neatvue/public/avatars
  projects:
    data: /home/victor/IdeaProjects/neatvue/public/projects

rabbitmq:
  input:
    exchange: ${RABBITMQ_MESSAGES_INPUT_EXCHANGE:user-queries-service}
    queue: ${RABBITMQ_MESSAGES_INPUT_QUEUE:result-queue}
    routingkey: ${RABBITMQ_MESSAGES_INPUT_ROUTING_KEY:result}
  output:
    exchange: ${RABBITMQ_MESSAGES_INPUT_EXCHANGE:experiment-service}
    queue: ${RABBITMQ_MESSAGES_INPUT_QUEUE:experiment}
    routingkey: ${RABBITMQ_MESSAGES_INPUT_ROUTING_KEY:data}

samba:
  host: ${SAMBA_HOST:localhost}
  username: ${SAMBA_USER:victor}
  password: ${SAMBA_PASSWORD:1512}
  shared_directory: ${SAMBA_SHARED_DIRECTORY:neat-store}

